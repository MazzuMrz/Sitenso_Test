{"version":3,"sources":["components/Tablaofertas.jsx","components/Tablapicante.jsx","components/tablaveggie.jsx","views/pages/Page2.js"],"names":["Tablaofertas","state","data","modalActualizar","modalInsertar","form","id","nombre","precio","descripcion","mostrarModalActualizar","dato","setState","cerrarModalActualizar","mostrarModalInsertar","cerrarModalInsertar","editar","contador","arreglo","map","registro","name","price","description","image","eliminar","window","confirm","splice","insertar","valorNuevo","length","lista","push","handleChange","e","target","value","Container","Button","color","onClick","Table","this","key","Modal","isOpen","ModalHeader","ModalBody","FormGroup","className","readOnly","type","onChange","ModalFooter","React","Component","Tablapicante","Tablaveggie","Page2"],"mappings":"grIAySeA,E,4MA1RbC,MAAQ,CACNC,KAAMA,EACNC,iBAAiB,EACjBC,eAAe,EACfC,KAAM,CACJC,GAAI,GACJC,OAAQ,GACRC,OAAQ,GACRC,YAAa,K,EAIjBC,uBAAyB,SAACC,GACxB,EAAKC,SAAS,CACZP,KAAMM,EACNR,iBAAiB,K,EAIrBU,sBAAwB,WACtB,EAAKD,SAAS,CAAET,iBAAiB,K,EAGnCW,qBAAuB,WACrB,EAAKF,SAAS,CACZR,eAAe,K,EAInBW,oBAAsB,WACpB,EAAKH,SAAS,CAAER,eAAe,K,EAGjCY,OAAS,SAACL,GACR,IAAIM,EAAW,EACXC,EAAU,EAAKjB,MAAMC,KACzBgB,EAAQC,KAAI,SAACC,GACPT,EAAKL,IAAMc,EAASd,KACtBY,EAAQD,GAAUI,KAAOV,EAAKU,KAC9BH,EAAQD,GAAUK,MAAQX,EAAKW,MAC/BJ,EAAQD,GAAUM,YAAcZ,EAAKY,YACrCL,EAAQD,GAAUO,MAAQb,EAAKa,OAEjCP,OAEF,EAAKL,SAAS,CAAEV,KAAMgB,EAASf,iBAAiB,K,EAGlDsB,SAAW,SAACd,GAIV,GAAc,GAHDe,OAAOC,QAClB,mDAAkDhB,EAAKU,MAErC,CAClB,IAAIJ,EAAW,EACXC,EAAU,EAAKjB,MAAMC,KACzBgB,EAAQC,KAAI,SAACC,GACPT,EAAKL,IAAMc,EAASd,IACtBY,EAAQU,OAAOX,EAAU,GAE3BA,OAEF,EAAKL,SAAS,CAAEV,KAAMgB,EAASf,iBAAiB,M,EAIpD0B,SAAW,WACT,IAAIC,EAAU,eAAQ,EAAK7B,MAAMI,MACjCyB,EAAWxB,GAAK,EAAKL,MAAMC,KAAK6B,OAAS,EACzC,IAAIC,EAAQ,EAAK/B,MAAMC,KACvB8B,EAAMC,KAAKH,GACX,EAAKlB,SAAS,CAAER,eAAe,EAAOF,KAAM8B,K,EAG9CE,aAAe,SAACC,GACd,EAAKvB,SAAS,CACZP,KAAK,2BACA,EAAKJ,MAAMI,MADZ,kBAED8B,EAAEC,OAAOf,KAAOc,EAAEC,OAAOC,W,4CAKhC,WAAU,IAAD,OACP,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,6BACA,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAM,EAAK3B,yBAA5C,SAGA,6BACA,6BACA,kBAAC4B,EAAA,EAAD,KACE,+BACE,4BACE,kCACA,sCACA,2CACA,sCAEA,2CAIJ,+BACGC,KAAK1C,MAAMC,KAAKiB,KAAI,SAACR,GAAD,OACnB,wBAAIiC,IAAKjC,EAAKL,IACZ,4BAAKK,EAAKL,IACV,4BAAKK,EAAKU,MACV,4BAAKV,EAAKY,aACV,4BAAKZ,EAAKW,OACV,4BACE,kBAACiB,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAM,EAAK/B,uBAAuBC,KAF7C,UAKU,IACV,kBAAC4B,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAM,EAAKhB,SAASd,KAApD,oBAUZ,kBAACkC,EAAA,EAAD,CAAOC,OAAQH,KAAK1C,MAAME,iBACxB,kBAAC4C,EAAA,EAAD,KACE,6BACE,iDAIJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,sCAEA,2BACEC,UAAU,eACVC,UAAQ,EACRC,KAAK,OACLf,MAAOM,KAAK1C,MAAMI,KAAKC,MAI3B,kBAAC2C,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,OACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKgB,QAI3B,kBAAC4B,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKiB,SAI3B,kBAAC2B,EAAA,EAAD,KACE,8CACA,2BACEC,UAAU,eACV7B,KAAK,cACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKkB,eAI3B,kBAAC0B,EAAA,EAAD,KACE,sCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKmB,UAK7B,kBAAC8B,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAM,EAAKzB,OAAO,EAAKf,MAAMI,QAFxC,UAMA,kBAACkC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAM,EAAK5B,0BAA3C,cAMJ,kBAACgC,EAAA,EAAD,CAAOC,OAAQH,KAAK1C,MAAMG,eACxB,kBAAC2C,EAAA,EAAD,KACE,6BACE,oDAIJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,sCAEA,2BACEC,UAAU,eACVC,UAAQ,EACRC,KAAK,OACLf,MAAOM,KAAK1C,MAAMC,KAAK6B,OAAS,KAIpC,kBAACkB,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,OACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,8CACA,2BACEC,UAAU,eACV7B,KAAK,cACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,sCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKmB,UAK7B,kBAAC8B,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAM,EAAKZ,aAA5C,YAGA,kBAACU,EAAA,EAAD,CACEW,UAAU,iBACVT,QAAS,kBAAM,EAAK1B,wBAFtB,mB,GA/QewC,IAAMC,W,SC2RlBC,E,4MA1RbxD,MAAQ,CACNC,KAAMA,EACNC,iBAAiB,EACjBC,eAAe,EACfC,KAAM,CACJC,GAAI,GACJC,OAAQ,GACRC,OAAQ,GACRC,YAAa,K,EAIjBC,uBAAyB,SAACC,GACxB,EAAKC,SAAS,CACZP,KAAMM,EACNR,iBAAiB,K,EAIrBU,sBAAwB,WACtB,EAAKD,SAAS,CAAET,iBAAiB,K,EAGnCW,qBAAuB,WACrB,EAAKF,SAAS,CACZR,eAAe,K,EAInBW,oBAAsB,WACpB,EAAKH,SAAS,CAAER,eAAe,K,EAGjCY,OAAS,SAACL,GACR,IAAIM,EAAW,EACXC,EAAU,EAAKjB,MAAMC,KACzBgB,EAAQC,KAAI,SAACC,GACPT,EAAKL,IAAMc,EAASd,KACtBY,EAAQD,GAAUI,KAAOV,EAAKU,KAC9BH,EAAQD,GAAUK,MAAQX,EAAKW,MAC/BJ,EAAQD,GAAUM,YAAcZ,EAAKY,YACrCL,EAAQD,GAAUO,MAAQb,EAAKa,OAEjCP,OAEF,EAAKL,SAAS,CAAEV,KAAMgB,EAASf,iBAAiB,K,EAGlDsB,SAAW,SAACd,GAIV,GAAc,GAHDe,OAAOC,QAClB,mDAAkDhB,EAAKU,MAErC,CAClB,IAAIJ,EAAW,EACXC,EAAU,EAAKjB,MAAMC,KACzBgB,EAAQC,KAAI,SAACC,GACPT,EAAKL,IAAMc,EAASd,IACtBY,EAAQU,OAAOX,EAAU,GAE3BA,OAEF,EAAKL,SAAS,CAAEV,KAAMgB,EAASf,iBAAiB,M,EAIpD0B,SAAW,WACT,IAAIC,EAAU,eAAQ,EAAK7B,MAAMI,MACjCyB,EAAWxB,GAAK,EAAKL,MAAMC,KAAK6B,OAAS,EACzC,IAAIC,EAAQ,EAAK/B,MAAMC,KACvB8B,EAAMC,KAAKH,GACX,EAAKlB,SAAS,CAAER,eAAe,EAAOF,KAAM8B,K,EAG9CE,aAAe,SAACC,GACd,EAAKvB,SAAS,CACZP,KAAK,2BACA,EAAKJ,MAAMI,MADZ,kBAED8B,EAAEC,OAAOf,KAAOc,EAAEC,OAAOC,W,4CAKhC,WAAU,IAAD,OACP,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,6BACA,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAM,EAAK3B,yBAA5C,SAGA,6BACA,6BACA,kBAAC4B,EAAA,EAAD,KACE,+BACE,4BACE,kCACA,sCACA,2CACA,sCAEA,2CAIJ,+BACGC,KAAK1C,MAAMC,KAAKiB,KAAI,SAACR,GAAD,OACnB,wBAAIiC,IAAKjC,EAAKL,IACZ,4BAAKK,EAAKL,IACV,4BAAKK,EAAKU,MACV,4BAAKV,EAAKY,aACV,4BAAKZ,EAAKW,OACV,4BACE,kBAACiB,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAM,EAAK/B,uBAAuBC,KAF7C,UAKU,IACV,kBAAC4B,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAM,EAAKhB,SAASd,KAApD,oBAUZ,kBAACkC,EAAA,EAAD,CAAOC,OAAQH,KAAK1C,MAAME,iBACxB,kBAAC4C,EAAA,EAAD,KACE,6BACE,iDAIJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,sCAEA,2BACEC,UAAU,eACVC,UAAQ,EACRC,KAAK,OACLf,MAAOM,KAAK1C,MAAMI,KAAKC,MAI3B,kBAAC2C,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,OACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKgB,QAI3B,kBAAC4B,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKiB,SAI3B,kBAAC2B,EAAA,EAAD,KACE,8CACA,2BACEC,UAAU,eACV7B,KAAK,cACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKkB,eAI3B,kBAAC0B,EAAA,EAAD,KACE,sCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKmB,UAK7B,kBAAC8B,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAM,EAAKzB,OAAO,EAAKf,MAAMI,QAFxC,UAMA,kBAACkC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAM,EAAK5B,0BAA3C,cAMJ,kBAACgC,EAAA,EAAD,CAAOC,OAAQH,KAAK1C,MAAMG,eACxB,kBAAC2C,EAAA,EAAD,KACE,6BACE,oDAIJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,sCAEA,2BACEC,UAAU,eACVC,UAAQ,EACRC,KAAK,OACLf,MAAOM,KAAK1C,MAAMC,KAAK6B,OAAS,KAIpC,kBAACkB,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,OACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,8CACA,2BACEC,UAAU,eACV7B,KAAK,cACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,sCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKmB,UAK7B,kBAAC8B,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAM,EAAKZ,aAA5C,YAGA,kBAACU,EAAA,EAAD,CACEW,UAAU,iBACVT,QAAS,kBAAM,EAAK1B,wBAFtB,mB,GA/QewC,IAAMC,W,SC4RlBE,E,4MA3RbzD,MAAQ,CACNC,KAAMA,EACNC,iBAAiB,EACjBC,eAAe,EACfC,KAAM,CACJC,GAAI,GACJC,OAAQ,GACRC,OAAQ,GACRC,YAAa,K,EAIjBC,uBAAyB,SAACC,GACxB,EAAKC,SAAS,CACZP,KAAMM,EACNR,iBAAiB,K,EAIrBU,sBAAwB,WACtB,EAAKD,SAAS,CAAET,iBAAiB,K,EAGnCW,qBAAuB,WACrB,EAAKF,SAAS,CACZR,eAAe,K,EAInBW,oBAAsB,WACpB,EAAKH,SAAS,CAAER,eAAe,K,EAGjCY,OAAS,SAACL,GACR,IAAIM,EAAW,EACXC,EAAU,EAAKjB,MAAMC,KACzBgB,EAAQC,KAAI,SAACC,GACPT,EAAKL,IAAMc,EAASd,KACtBY,EAAQD,GAAUI,KAAOV,EAAKU,KAC9BH,EAAQD,GAAUK,MAAQX,EAAKW,MAC/BJ,EAAQD,GAAUM,YAAcZ,EAAKY,YACrCL,EAAQD,GAAUO,MAAQb,EAAKa,OAEjCP,OAEF,EAAKL,SAAS,CAAEV,KAAMgB,EAASf,iBAAiB,K,EAGlDsB,SAAW,SAACd,GAIV,GAAc,GAHDe,OAAOC,QAClB,mDAAkDhB,EAAKU,MAErC,CAClB,IAAIJ,EAAW,EACXC,EAAU,EAAKjB,MAAMC,KACzBgB,EAAQC,KAAI,SAACC,GACPT,EAAKL,IAAMc,EAASd,IACtBY,EAAQU,OAAOX,EAAU,GAE3BA,OAEF,EAAKL,SAAS,CAAEV,KAAMgB,EAASf,iBAAiB,M,EAIpD0B,SAAW,WACT,IAAIC,EAAU,eAAQ,EAAK7B,MAAMI,MACjCyB,EAAWxB,GAAK,EAAKL,MAAMC,KAAK6B,OAAS,EACzC,IAAIC,EAAQ,EAAK/B,MAAMC,KACvB8B,EAAMC,KAAKH,GACX,EAAKlB,SAAS,CAAER,eAAe,EAAOF,KAAM8B,K,EAG9CE,aAAe,SAACC,GACd,EAAKvB,SAAS,CACZP,KAAK,2BACA,EAAKJ,MAAMI,MADZ,kBAED8B,EAAEC,OAAOf,KAAOc,EAAEC,OAAOC,W,4CAKhC,WAAU,IAAD,OACP,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,6BACA,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAM,EAAK3B,yBAA5C,SAGA,6BACA,6BACA,kBAAC4B,EAAA,EAAD,KACE,+BACE,4BACE,kCACA,sCACA,2CACA,sCAEA,2CAIJ,+BACGC,KAAK1C,MAAMC,KAAKiB,KAAI,SAACR,GAAD,OACnB,wBAAIiC,IAAKjC,EAAKL,IACZ,4BAAKK,EAAKL,IACV,4BAAKK,EAAKU,MACV,4BAAKV,EAAKY,aACV,4BAAKZ,EAAKW,OACV,4BACE,kBAACiB,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAM,EAAK/B,uBAAuBC,KAF7C,UAKU,IACV,kBAAC4B,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAM,EAAKhB,SAASd,KAApD,oBAUZ,kBAACkC,EAAA,EAAD,CAAOC,OAAQH,KAAK1C,MAAME,iBACxB,kBAAC4C,EAAA,EAAD,KACE,6BACE,iDAIJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,sCAEA,2BACEC,UAAU,eACVC,UAAQ,EACRC,KAAK,OACLf,MAAOM,KAAK1C,MAAMI,KAAKC,MAI3B,kBAAC2C,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,OACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKgB,QAI3B,kBAAC4B,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKiB,SAI3B,kBAAC2B,EAAA,EAAD,KACE,8CACA,2BACEC,UAAU,eACV7B,KAAK,cACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKkB,eAI3B,kBAAC0B,EAAA,EAAD,KACE,sCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKmB,UAK7B,kBAAC8B,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAM,EAAKzB,OAAO,EAAKf,MAAMI,QAFxC,UAMA,kBAACkC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAM,EAAK5B,0BAA3C,cAMJ,kBAACgC,EAAA,EAAD,CAAOC,OAAQH,KAAK1C,MAAMG,eACxB,kBAAC2C,EAAA,EAAD,KACE,6BACE,oDAIJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,sCAEA,2BACEC,UAAU,eACVC,UAAQ,EACRC,KAAK,OACLf,MAAOM,KAAK1C,MAAMC,KAAK6B,OAAS,KAIpC,kBAACkB,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,OACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,yCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,8CACA,2BACEC,UAAU,eACV7B,KAAK,cACL+B,KAAK,OACLC,SAAUV,KAAKT,gBAInB,kBAACe,EAAA,EAAD,KACE,sCACA,2BACEC,UAAU,eACV7B,KAAK,QACL+B,KAAK,OACLC,SAAUV,KAAKT,aACfG,MAAOM,KAAK1C,MAAMI,KAAKmB,UAM7B,kBAAC8B,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAM,EAAKZ,aAA5C,YAGA,kBAACU,EAAA,EAAD,CACEW,UAAU,iBACVT,QAAS,kBAAM,EAAK1B,wBAFtB,mB,GAhRcwC,IAAMC,WCKjBG,UAdD,WACZ,OACE,6BACE,wBAAIT,UAAU,eAAd,qBACA,kBAAC,EAAD,MACA,wBAAIA,UAAU,eAAd,WACA,kBAAC,EAAD,MACA,wBAAIA,UAAU,eAAd,WACA,kBAAC,EAAD","file":"static/js/8.89020b7a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n} from \"reactstrap\";\nimport data from \"../../src/components/datas/datafiles.json\";\n\nclass Tablaofertas extends React.Component {\n  state = {\n    data: data,\n    modalActualizar: false,\n    modalInsertar: false,\n    form: {\n      id: \"\",\n      nombre: \"\",\n      precio: \"\",\n      descripcion: \"\",\n    },\n  };\n\n  mostrarModalActualizar = (dato) => {\n    this.setState({\n      form: dato,\n      modalActualizar: true,\n    });\n  };\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n  mostrarModalInsertar = () => {\n    this.setState({\n      modalInsertar: true,\n    });\n  };\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n  editar = (dato) => {\n    let contador = 0;\n    let arreglo = this.state.data;\n    arreglo.map((registro) => {\n      if (dato.id == registro.id) {\n        arreglo[contador].name = dato.name;\n        arreglo[contador].price = dato.price;\n        arreglo[contador].description = dato.description;\n        arreglo[contador].image = dato.image;\n      }\n      contador++;\n    });\n    this.setState({ data: arreglo, modalActualizar: false });\n  };\n\n  eliminar = (dato) => {\n    let opcion = window.confirm(\n      \"Estás Seguro que deseas Eliminar el elemento \" + dato.name\n    );\n    if (opcion == true) {\n      let contador = 0;\n      let arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.id == registro.id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n  insertar = () => {\n    let valorNuevo = { ...this.state.form };\n    valorNuevo.id = this.state.data.length + 1;\n    let lista = this.state.data;\n    lista.push(valorNuevo);\n    this.setState({ modalInsertar: false, data: lista });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          <br />\n          <Button color=\"success\" onClick={() => this.mostrarModalInsertar()}>\n            Crear\n          </Button>\n          <br />\n          <br />\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Nombre</th>\n                <th>Descripcion</th>\n                <th>Precio</th>\n\n                <th>Acción</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato.id}>\n                  <td>{dato.id}</td>\n                  <td>{dato.name}</td>\n                  <td>{dato.description}</td>\n                  <td>{dato.price}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.mostrarModalActualizar(dato)}\n                    >\n                      Editar\n                    </Button>{\" \"}\n                    <Button color=\"danger\" onClick={() => this.eliminar(dato)}>\n                      Eliminar\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n            <div>\n              <h1>Editar Registro</h1>\n            </div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>Id:</label>\n\n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form.id}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Nombre</label>\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.name}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Precio</label>\n              <input\n                className=\"form-control\"\n                name=\"price\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.price}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Descripcion</label>\n              <input\n                className=\"form-control\"\n                name=\"description\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.description}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>URL</label>\n              <input\n                className=\"form-control\"\n                name=\"image\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.image}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Editar\n            </Button>\n            <Button color=\"danger\" onClick={() => this.cerrarModalActualizar()}>\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n            <div>\n              <h3>Insertar Personaje</h3>\n            </div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>Id:</label>\n\n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length + 1}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Nombre</label>\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Precio</label>\n              <input\n                className=\"form-control\"\n                name=\"price\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Descripcion</label>\n              <input\n                className=\"form-control\"\n                name=\"description\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>URL</label>\n              <input\n                className=\"form-control\"\n                name=\"image\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.image}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button color=\"primary\" onClick={() => this.insertar()}>\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default Tablaofertas;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n} from \"reactstrap\";\nimport data from \"../../src/components/datas/datapicante.json\";\n\nclass Tablapicante extends React.Component {\n  state = {\n    data: data,\n    modalActualizar: false,\n    modalInsertar: false,\n    form: {\n      id: \"\",\n      nombre: \"\",\n      precio: \"\",\n      descripcion: \"\",\n    },\n  };\n\n  mostrarModalActualizar = (dato) => {\n    this.setState({\n      form: dato,\n      modalActualizar: true,\n    });\n  };\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n  mostrarModalInsertar = () => {\n    this.setState({\n      modalInsertar: true,\n    });\n  };\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n  editar = (dato) => {\n    let contador = 0;\n    let arreglo = this.state.data;\n    arreglo.map((registro) => {\n      if (dato.id == registro.id) {\n        arreglo[contador].name = dato.name;\n        arreglo[contador].price = dato.price;\n        arreglo[contador].description = dato.description;\n        arreglo[contador].image = dato.image;\n      }\n      contador++;\n    });\n    this.setState({ data: arreglo, modalActualizar: false });\n  };\n\n  eliminar = (dato) => {\n    let opcion = window.confirm(\n      \"Estás Seguro que deseas Eliminar el elemento \" + dato.name\n    );\n    if (opcion == true) {\n      let contador = 0;\n      let arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.id == registro.id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n  insertar = () => {\n    let valorNuevo = { ...this.state.form };\n    valorNuevo.id = this.state.data.length + 1;\n    let lista = this.state.data;\n    lista.push(valorNuevo);\n    this.setState({ modalInsertar: false, data: lista });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          <br />\n          <Button color=\"success\" onClick={() => this.mostrarModalInsertar()}>\n            Crear\n          </Button>\n          <br />\n          <br />\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Nombre</th>\n                <th>Descripcion</th>\n                <th>Precio</th>\n\n                <th>Acción</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato.id}>\n                  <td>{dato.id}</td>\n                  <td>{dato.name}</td>\n                  <td>{dato.description}</td>\n                  <td>{dato.price}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.mostrarModalActualizar(dato)}\n                    >\n                      Editar\n                    </Button>{\" \"}\n                    <Button color=\"danger\" onClick={() => this.eliminar(dato)}>\n                      Eliminar\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n            <div>\n              <h1>Editar Registro</h1>\n            </div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>Id:</label>\n\n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form.id}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Nombre</label>\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.name}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Precio</label>\n              <input\n                className=\"form-control\"\n                name=\"price\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.price}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Descripcion</label>\n              <input\n                className=\"form-control\"\n                name=\"description\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.description}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>URL</label>\n              <input\n                className=\"form-control\"\n                name=\"image\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.image}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Editar\n            </Button>\n            <Button color=\"danger\" onClick={() => this.cerrarModalActualizar()}>\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n            <div>\n              <h3>Insertar Personaje</h3>\n            </div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>Id:</label>\n\n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length + 1}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Nombre</label>\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Precio</label>\n              <input\n                className=\"form-control\"\n                name=\"price\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Descripcion</label>\n              <input\n                className=\"form-control\"\n                name=\"description\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>URL</label>\n              <input\n                className=\"form-control\"\n                name=\"image\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.image}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button color=\"primary\" onClick={() => this.insertar()}>\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default Tablapicante;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n} from \"reactstrap\";\nimport data from \"../../src/components/datas/dataveggie.json\";\n\nclass Tablaveggie extends React.Component {\n  state = {\n    data: data,\n    modalActualizar: false,\n    modalInsertar: false,\n    form: {\n      id: \"\",\n      nombre: \"\",\n      precio: \"\",\n      descripcion: \"\",\n    },\n  };\n\n  mostrarModalActualizar = (dato) => {\n    this.setState({\n      form: dato,\n      modalActualizar: true,\n    });\n  };\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n  mostrarModalInsertar = () => {\n    this.setState({\n      modalInsertar: true,\n    });\n  };\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n  editar = (dato) => {\n    let contador = 0;\n    let arreglo = this.state.data;\n    arreglo.map((registro) => {\n      if (dato.id == registro.id) {\n        arreglo[contador].name = dato.name;\n        arreglo[contador].price = dato.price;\n        arreglo[contador].description = dato.description;\n        arreglo[contador].image = dato.image;\n      }\n      contador++;\n    });\n    this.setState({ data: arreglo, modalActualizar: false });\n  };\n\n  eliminar = (dato) => {\n    let opcion = window.confirm(\n      \"Estás Seguro que deseas Eliminar el elemento \" + dato.name\n    );\n    if (opcion == true) {\n      let contador = 0;\n      let arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.id == registro.id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n  insertar = () => {\n    let valorNuevo = { ...this.state.form };\n    valorNuevo.id = this.state.data.length + 1;\n    let lista = this.state.data;\n    lista.push(valorNuevo);\n    this.setState({ modalInsertar: false, data: lista });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          <br />\n          <Button color=\"success\" onClick={() => this.mostrarModalInsertar()}>\n            Crear\n          </Button>\n          <br />\n          <br />\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Nombre</th>\n                <th>Descripcion</th>\n                <th>Precio</th>\n\n                <th>Acción</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato.id}>\n                  <td>{dato.id}</td>\n                  <td>{dato.name}</td>\n                  <td>{dato.description}</td>\n                  <td>{dato.price}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.mostrarModalActualizar(dato)}\n                    >\n                      Editar\n                    </Button>{\" \"}\n                    <Button color=\"danger\" onClick={() => this.eliminar(dato)}>\n                      Eliminar\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n            <div>\n              <h1>Editar Registro</h1>\n            </div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>Id:</label>\n\n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form.id}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Nombre</label>\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.name}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Precio</label>\n              <input\n                className=\"form-control\"\n                name=\"price\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.price}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Descripcion</label>\n              <input\n                className=\"form-control\"\n                name=\"description\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.description}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>URL</label>\n              <input\n                className=\"form-control\"\n                name=\"image\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.image}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Editar\n            </Button>\n            <Button color=\"danger\" onClick={() => this.cerrarModalActualizar()}>\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n            <div>\n              <h3>Insertar Personaje</h3>\n            </div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>Id:</label>\n\n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length + 1}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Nombre</label>\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Precio</label>\n              <input\n                className=\"form-control\"\n                name=\"price\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>Descripcion</label>\n              <input\n                className=\"form-control\"\n                name=\"description\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>URL</label>\n              <input\n                className=\"form-control\"\n                name=\"image\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.image}\n              />\n            </FormGroup>\n            \n          </ModalBody>\n\n          <ModalFooter>\n            <Button color=\"primary\" onClick={() => this.insertar()}>\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default Tablaveggie;\n","import React from 'react'\nimport Tablaofertas from '../../components/Tablaofertas'\nimport Tablapicante from '../../components/Tablapicante'\nimport Tablaveggie from '../../components/tablaveggie'\n\nconst Page2 = () => {\n  return (\n    <div>\n      <h1 className=\"text-center\">Burguers picantes</h1>\n      <Tablapicante />\n      <h1 className=\"text-center\">Veggies</h1>\n      <Tablaveggie />\n      <h1 className=\"text-center\">Ofertas</h1>\n      <Tablaofertas />\n\n    </div>\n  )\n}\n\nexport default Page2\n"],"sourceRoot":""}